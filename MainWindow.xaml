<Window x:Class="VRCSTT.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VRCSTT"
        xmlns:converters="clr-namespace:VRCSTT.Converters"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
        <converters:SubtractValueConverter x:Key="SubtractValueConverter"/>

        <!-- This style is used for buttons, to remove the WPF default 'animated' mouse over effect -->
        <Style x:Key="NoButtonStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" 
                                BorderThickness="0"
                        BorderBrush="Transparent" 
                        CornerRadius="60" 
                        Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="Background" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <Button Style="{StaticResource NoButtonStyle}" x:Name="recordButton" BorderBrush="#01000000" Background="#01000000" Command="{Binding StartRecording}" Grid.Column="2" Grid.Row="1" Height="Auto" Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}">
            <StackPanel Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorLevel=1, AncestorType=Button}, Converter={StaticResource SubtractValueConverter}}" Width="{Binding ActualWidth, RelativeSource={RelativeSource AncestorLevel=1, AncestorType=Button}, Converter={StaticResource SubtractValueConverter}}" HorizontalAlignment="Center">
                <Border Background="Red" Visibility="{Binding MicActivationVisible}" CornerRadius="60" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorLevel=1, AncestorType=Button}, Converter={StaticResource SubtractValueConverter}}">
                    <Path Fill="White" Data="M176 352c53.02 0 96-42.98 96-96V96c0-53.02-42.98-96-96-96S80 42.98 80 96v160c0 53.02 42.98 96 96 96zm160-160h-16c-8.84 0-16 7.16-16 16v48c0 74.8-64.49 134.82-140.79 127.38C96.71 376.89 48 317.11 48 250.3V208c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v40.16c0 89.64 63.97 169.55 152 181.69V464H96c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16h-56v-33.77C285.71 418.47 352 344.9 352 256v-48c0-8.84-7.16-16-16-16z" Stretch="Uniform" Margin="15"/>
                </Border>
                <Border BorderBrush="Black" BorderThickness="1" Background="White" Visibility="{Binding MicActivationVisible, Converter={StaticResource InverseBooleanConverter}}" CornerRadius="60" Height="{Binding ActualHeight, RelativeSource={RelativeSource AncestorLevel=1, AncestorType=Button}, Converter={StaticResource SubtractValueConverter}}">
                    <Path Fill="Black" Data="M176 352c53.02 0 96-42.98 96-96V96c0-53.02-42.98-96-96-96S80 42.98 80 96v160c0 53.02 42.98 96 96 96zm160-160h-16c-8.84 0-16 7.16-16 16v48c0 74.8-64.49 134.82-140.79 127.38C96.71 376.89 48 317.11 48 250.3V208c0-8.84-7.16-16-16-16H16c-8.84 0-16 7.16-16 16v40.16c0 89.64 63.97 169.55 152 181.69V464H96c-8.84 0-16 7.16-16 16v16c0 8.84 7.16 16 16 16h160c8.84 0 16-7.16 16-16v-16c0-8.84-7.16-16-16-16h-56v-33.77C285.71 418.47 352 344.9 352 256v-48c0-8.84-7.16-16-16-16z" Stretch="Uniform" Margin="15"/>
                </Border>
            </StackPanel>
        </Button>
        <TextBox x:Name="OutputTextbox" Text="{Binding TextboxText}" TextWrapping="Wrap" Grid.Column="1" Grid.Row="2" Grid.RowSpan="2" Grid.ColumnSpan="3" Margin="5"/>

        <StackPanel Orientation="Vertical" Grid.RowSpan="2" Grid.ColumnSpan="2" Margin="10 10 50 10">
            <ComboBox x:Name="LanguageBox" ItemsSource="{Binding Languages}" SelectedItem="{Binding SelectedLanguage}" IsEditable="False"/>
            <CheckBox x:Name="StandardMic" Content="Use Standard Mic" IsChecked="{Binding UseStandardMic}" Margin="0 20 0 0"/>
            <ComboBox x:Name="MicrophoneBox"  ItemsSource="{Binding Microphones}" SelectedItem="{Binding SelectedMicrophone}" DisplayMemberPath="FriendlyName" IsEnabled="{Binding Path=UseStandardMic, Converter={StaticResource InverseBooleanConverter}}" Margin="0 10 0 0"/>
        </StackPanel>

        <ListView x:Name="HistoryBox" ItemsSource="{Binding VoiceHistory}" Grid.Row="0" Grid.Column="5" Grid.RowSpan="4" 
                 Margin="0 5 5 5" ScrollViewer.HorizontalScrollBarVisibility="Disabled" ScrollViewer.VerticalScrollBarVisibility="Disabled"
                 HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Height="105" VerticalAlignment="Bottom">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Button Content="{Binding text}" Command="{Binding SendHistoryPoint}" CommandParameter="{Binding ID}" HorizontalAlignment="Stretch" BorderThickness="0" Background="LightGray" Padding="5 2 0 2"/>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>
    </Grid>
</Window>
